// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using BS.Persistence;

namespace BS.Persistence.Migrations
{
    [DbContext(typeof(BSDBContext))]
    partial class TODBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024");

            modelBuilder.Entity("BS.Domain.Entities.Author", b =>
                {
                    b.Property<int>("AuthorId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AuthorName");

                    b.Property<int?>("BookId");

                    b.HasKey("AuthorId");

                    b.HasIndex("BookId");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("BS.Domain.Entities.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BookName");

                    b.Property<int>("BookStoreId");

                    b.HasKey("BookId");

                    b.HasIndex("BookStoreId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("BS.Domain.Entities.BookStore", b =>
                {
                    b.Property<int>("BookStoreId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BookStoreName");

                    b.HasKey("BookStoreId");

                    b.ToTable("BookStores");
                });

            modelBuilder.Entity("BS.Domain.Entities.Author", b =>
                {
                    b.HasOne("BS.Domain.Entities.Book")
                        .WithMany("Authors")
                        .HasForeignKey("BookId");
                });

            modelBuilder.Entity("BS.Domain.Entities.Book", b =>
                {
                    b.HasOne("BS.Domain.Entities.BookStore", "BookStore")
                        .WithMany()
                        .HasForeignKey("BookStoreId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
